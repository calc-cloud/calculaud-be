"""update status history tracking

Revision ID: 5dd5b3c55309
Revises: f8d9c5e4a7b2
Create Date: 2025-09-04 14:00:32.957259

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5dd5b3c55309'
down_revision: Union[str, Sequence[str], None] = 'f8d9c5e4a7b2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'purpose_status_history',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('purpose_id', sa.Integer(), nullable=False),
        sa.Column(
            'previous_status',
            sa.Enum(name='statusenum', create_type=False),
            nullable=True
        ),
        sa.Column(
            'new_status', 
            sa.Enum(name='statusenum', create_type=False),
            nullable=False
        ),
        sa.Column(
            'changed_at',
            sa.DateTime(),
            server_default=sa.text('now()'),
            nullable=False
        ),
        sa.Column('changed_by', sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ['purpose_id'], ['purpose.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(
        op.f('ix_purpose_status_history_changed_at'),
        'purpose_status_history',
        ['changed_at'],
        unique=False
    )
    op.create_index(
        op.f('ix_purpose_status_history_id'),
        'purpose_status_history',
        ['id'],
        unique=False
    )
    op.create_index(
        op.f('ix_purpose_status_history_new_status'),
        'purpose_status_history',
        ['new_status'],
        unique=False
    )
    op.create_index(
        op.f('ix_purpose_status_history_previous_status'),
        'purpose_status_history',
        ['previous_status'],
        unique=False
    )
    op.create_index(
        op.f('ix_purpose_status_history_purpose_id'),
        'purpose_status_history',
        ['purpose_id'],
        unique=False
    )

    # Populate initial status history for existing purposes
    # Use creation_time for IN_PROGRESS (default status), last_modified for others
    op.execute("""
        INSERT INTO purpose_status_history (purpose_id, previous_status, new_status, changed_at, changed_by)
        SELECT
            id,
            NULL as previous_status,
            status as new_status,
            CASE
                WHEN status = 'IN_PROGRESS' THEN creation_time
                ELSE last_modified
            END as changed_at,
            NULL as changed_by
        FROM purpose;
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f('ix_purpose_status_history_purpose_id'),
        table_name='purpose_status_history'
    )
    op.drop_index(
        op.f('ix_purpose_status_history_previous_status'),
        table_name='purpose_status_history'
    )
    op.drop_index(
        op.f('ix_purpose_status_history_new_status'),
        table_name='purpose_status_history'
    )
    op.drop_index(
        op.f('ix_purpose_status_history_id'),
        table_name='purpose_status_history'
    )
    op.drop_index(
        op.f('ix_purpose_status_history_changed_at'),
        table_name='purpose_status_history'
    )
    op.drop_table('purpose_status_history')
    # ### end Alembic commands ###
